//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
import {
    BoxGeometry,
    Mesh,
    MeshBasicMaterial,
    PerspectiveCamera,
    Scene,
    WebGLRenderer,
    WebGLRenderTarget,
    OrthographicCamera,
    RGBFormat,
    BufferGeometry,
    BufferAttribute,
    RawShaderMaterial,
    Vector2,
} from 'three';
//////////////////////////////////////////////////////////////////////////////////////////////////
import {
    SimpleRenderTarget,
    SimpleCopy,
    simpleVertexShader
} from '../toy/simple';
import { FxToy } from '../toy/toy';
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
const fxZygoNoName = `#version 300 es
precision highp float;

out vec4 fragColor;

uniform vec3 iResolution;
uniform float iTime;
 
void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    float ts = sin(iTime*0.1156154)*sin(iTime*0.13329873);
    vec2 uv = fragCoord/iResolution.xy;
    float a = abs(atan(uv.y-0.5,uv.x-0.5)/(3.1415*2.0))*2.0;
    float d = distance(uv.xy,vec2(0.5,0.5));
    a = a + sin(d+ts)*ts;
    d = d + sin(a+ts)*51.0 * ts;
    vec2 p = vec2(cos(d)*a,sin(d)*a)-uv.xy;
    fragColor = (0.5 + 0.5*cos(iTime+p.xyxy*vec4(1,3,5,7)))*vec4(1.0,0.8,0.5,1);

}
 
void main() {
  mainImage(fragColor, gl_FragCoord.xy);
}
`;
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
export class FxNoName extends FxToy {
    constructor({ width, height }) {
        super({ width: width, height: height, fragmentShader: fxZygoNoName });
    }
}
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
export default FxNoName;
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
