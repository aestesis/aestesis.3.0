//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
import {
    BoxGeometry,
    Mesh,
    MeshBasicMaterial,
    PerspectiveCamera,
    Scene,
    WebGLRenderer,
    WebGLRenderTarget,
    OrthographicCamera,
    RGBFormat,
    BufferGeometry,
    BufferAttribute,
    RawShaderMaterial,
    Vector2,
} from 'three';
//////////////////////////////////////////////////////////////////////////////////////////////////
import {
    SimpleRenderTarget,
    SimpleCopy,
    simpleVertexShader
} from '../helpers/simple';
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
const fx = `#version 300 es
precision mediump float;
uniform vec2 resolution;
out vec4 fragColor;
void main() {
  vec2 uv = gl_FragCoord.xy / resolution.xy;
  fragColor = vec4(uv, 1.0, 1.0);
}`;
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
export class FxZygo {
    // TODO: setup all shader in glsl 3.0
    constructor({ width, height }) {
        this.material = new RawShaderMaterial({
            fragmentShader: fx,
            vertexShader: simpleVertexShader,
            uniforms: {
                time: { value: 0 },
                resolution: { value: new Vector2(width, height) }
            }
        });
        this.target = new SimpleRenderTarget({
            material: this.material, width: width, height: height
        });
        this.fill = new SimpleCopy({ texture: this.target.texture });
    }
    render(renderer) {
        this.material.uniforms.time.value = Date.now() / 1000;
        this.target.render(renderer);
        this.fill.render(renderer);
    }
}
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
export default FxZygo;
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
