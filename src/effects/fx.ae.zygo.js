//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
import {
    BoxGeometry,
    Mesh,
    MeshBasicMaterial,
    PerspectiveCamera,
    Scene,
    WebGLRenderer,
    WebGLRenderTarget,
    OrthographicCamera,
    RGBFormat,
    BufferGeometry,
    BufferAttribute,
    RawShaderMaterial,
    Vector2,
} from 'three';
//////////////////////////////////////////////////////////////////////////////////////////////////
import {
    SimpleRenderTarget,
    SimpleCopy,
    simpleVertexShader
} from '../toy/simple';
import { FxToy } from '../toy/toy';
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
const fxZygo = `#version 300 es
precision highp float;

out vec4 fragColor;

uniform vec3 iResolution;
uniform float iTime;
 
void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    float ts = sin(iTime*0.1156154)*5.0+12.0;
    vec2 uv = fragCoord/iResolution.xy;
    vec4 z0 = 0.5 + 0.5*cos(iTime+uv.xyxy+vec4(0,5,17,23));
    vec4 z1 = 0.5 + 0.5*cos(iTime+uv.xyxy+vec4(1,3,7,11));
    float v0 = sin(distance(z0.xy,uv)*ts)+sin(distance(z0.zw,uv)*ts)*0.5+0.5;
    float v1 = sin(distance(z1.xy,uv)*ts)+sin(distance(z1.zw,uv)*ts)+1.0;
    fragColor = vec4(v0,v1,0.5,1);
}
 
void main() {
  mainImage(fragColor, gl_FragCoord.xy);
}
`;
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
export class FxZygo extends FxToy {
    constructor({ width, height }) {
        super({ width: width, height: height, fragmentShader: fxZygo });
    }
}
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
export default FxZygo;
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
